plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
	//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	//implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	//implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.okta.spring:okta-spring-boot-starter:1.4.0'
	//implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	//runtimeOnly 'com.h2database:h2'
	//runtimeOnly 'com.ibm.db2:jcc'
	//annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

task installWebDependencies(type: Exec) {
     workingDir "web"
     commandLine 'npm','install'
}

task buildWeb(type: Exec, dependsOn: 'installWebDependencies') {
     workingDir "web"
     environment SKIP_PREFLIGHT_CHECK: "true"
     commandLine 'npm','run','build'
}

task runJar(type: Exec) {
    commandLine 'java','-Dserver.port=8080','-jar','build/libs/lesson_01-0.0.1-SNAPSHOT.jar'
}

task copyWeb(type: Copy, dependsOn: 'buildWeb') {
     from "web/build"
     into "src/main/resources/static"
}

test {
	useJUnitPlatform()
}
